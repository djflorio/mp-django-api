# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-11 18:37
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artwork',
            fields=[
                ('recid', models.AutoField(db_column='RecID', primary_key=True, serialize=False)),
                ('hash', models.TextField()),
                ('picture', models.TextField(blank=True, db_column='Picture', null=True)),
            ],
            options={
                'db_table': 'artwork',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_id', models.IntegerField()),
                ('asset_key', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'assets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Counter',
            fields=[
                ('counter_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'counter',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DinerAppLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('filename', models.CharField(blank=True, max_length=31, null=True)),
                ('company', models.TextField(blank=True, null=True)),
                ('fullname', models.TextField(blank=True, null=True)),
                ('activation_code', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'diner_app_log',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlistnamerecid', models.IntegerField(db_column='playlistNameRecID')),
                ('metadatarecid', models.IntegerField(db_column='metadataRecID')),
            ],
            options={
                'db_table': 'links',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MbBpm',
            fields=[
                ('recid', models.AutoField(db_column='RecID', primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=62)),
                ('parent_id', models.IntegerField()),
            ],
            options={
                'db_table': 'MB_BPM',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MbCdtitle',
            fields=[
                ('recid', models.AutoField(db_column='RecID', primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=62)),
                ('parent_id', models.IntegerField()),
            ],
            options={
                'db_table': 'MB_CDTitle',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MbComposer',
            fields=[
                ('recid', models.AutoField(db_column='RecID', primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=62)),
                ('parent_id', models.IntegerField()),
            ],
            options={
                'db_table': 'MB_Composer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MbDesigner',
            fields=[
                ('recid', models.AutoField(db_column='RecID', primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=62)),
                ('parent_id', models.IntegerField()),
            ],
            options={
                'db_table': 'MB_Designer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MbFeaturedinstrument',
            fields=[
                ('recid', models.AutoField(db_column='RecID', primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=62)),
                ('parent_id', models.IntegerField()),
            ],
            options={
                'db_table': 'MB_FeaturedInstrument',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MbFlatcategory',
            fields=[
                ('recid', models.AutoField(db_column='RecID', primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=62)),
                ('parent_id', models.IntegerField()),
            ],
            options={
                'db_table': 'MB__FlatCategory',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MbLibrary',
            fields=[
                ('recid', models.AutoField(db_column='RecID', primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=62)),
                ('parent_id', models.IntegerField()),
            ],
            options={
                'db_table': 'MB_Library',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MbManufacturer',
            fields=[
                ('recid', models.AutoField(db_column='RecID', primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=62)),
                ('parent_id', models.IntegerField()),
            ],
            options={
                'db_table': 'MB_Manufacturer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MbPathname',
            fields=[
                ('recid', models.AutoField(db_column='RecID', primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=62)),
                ('parent_id', models.IntegerField()),
            ],
            options={
                'db_table': 'MB_Pathname',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MbPublisher',
            fields=[
                ('recid', models.AutoField(db_column='RecID', primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=62)),
                ('parent_id', models.IntegerField()),
            ],
            options={
                'db_table': 'MB_Publisher',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MbShortid',
            fields=[
                ('recid', models.AutoField(db_column='RecID', primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=62)),
                ('parent_id', models.IntegerField()),
            ],
            options={
                'db_table': 'MB_ShortID',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MbShow',
            fields=[
                ('recid', models.AutoField(db_column='RecID', primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=62)),
                ('parent_id', models.IntegerField()),
            ],
            options={
                'db_table': 'MB_Show',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('recid', models.AutoField(db_column='RecID', primary_key=True, serialize=False)),
                ('filename', models.CharField(db_column='Filename', max_length=255)),
                ('pathname', models.CharField(db_column='Pathname', max_length=255)),
                ('filepath', models.TextField(db_column='FilePath')),
                ('duration', models.CharField(db_column='Duration', max_length=10)),
                ('filetype', models.CharField(db_column='FileType', max_length=4)),
                ('creationdate', models.DateField(db_column='CreationDate')),
                ('modificationdate', models.DateField(db_column='ModificationDate')),
                ('totalframes', models.IntegerField(db_column='TotalFrames')),
                ('entrydate', models.FloatField(db_column='EntryDate')),
                ('popularity', models.IntegerField(db_column='Popularity')),
                ('split', models.IntegerField(db_column='Split')),
                ('rating', models.IntegerField(db_column='Rating')),
                ('samplerate', models.IntegerField(db_column='SampleRate')),
                ('channels', models.IntegerField(db_column='Channels')),
                ('bitdepth', models.IntegerField(db_column='BitDepth')),
                ('channellayout', models.CharField(db_column='ChannelLayout', max_length=31)),
                ('field_flatcategory', models.CharField(db_column='_FlatCategory', max_length=255)),
                ('field_waveformlink', models.IntegerField(db_column='_WaveformLink')),
                ('field_picturelink', models.IntegerField(db_column='_PictureLink')),
                ('field_umid', models.CharField(db_column='_UMID', max_length=64)),
                ('time', models.TimeField(blank=True, db_column='Time', null=True)),
                ('volume', models.CharField(db_column='Volume', max_length=100)),
                ('track', models.IntegerField(blank=True, db_column='Track', null=True)),
                ('index', models.IntegerField(blank=True, db_column='Index', null=True)),
                ('field_dirty', models.IntegerField(blank=True, db_column='_Dirty', null=True)),
                ('lyrics', models.TextField(blank=True, db_column='Lyrics', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=1000, null=True)),
                ('source', models.CharField(blank=True, db_column='Source', max_length=62, null=True)),
                ('category', models.CharField(blank=True, db_column='Category', max_length=62, null=True)),
                ('subcategory', models.CharField(blank=True, db_column='SubCategory', max_length=1024, null=True)),
                ('fxname', models.CharField(blank=True, db_column='FXName', max_length=128, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('show', models.CharField(blank=True, db_column='Show', max_length=62, null=True)),
                ('library', models.CharField(blank=True, db_column='Library', max_length=62, null=True)),
                ('rectype', models.CharField(blank=True, db_column='RecType', max_length=1024, null=True)),
                ('shortid', models.CharField(blank=True, db_column='ShortID', max_length=31, null=True)),
                ('longid', models.CharField(blank=True, db_column='LongID', max_length=128, null=True)),
                ('recmedium', models.CharField(blank=True, db_column='RecMedium', max_length=1024, null=True)),
                ('keywords', models.CharField(blank=True, db_column='Keywords', max_length=255, null=True)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=1024, null=True)),
                ('microphone', models.CharField(blank=True, db_column='Microphone', max_length=62, null=True)),
                ('composer', models.CharField(blank=True, db_column='Composer', max_length=255, null=True)),
                ('arranger', models.CharField(blank=True, db_column='Arranger', max_length=128, null=True)),
                ('conductor', models.CharField(blank=True, db_column='Conductor', max_length=128, null=True)),
                ('publisher', models.CharField(blank=True, db_column='Publisher', max_length=255, null=True)),
                ('performer', models.CharField(blank=True, db_column='Performer', max_length=128, null=True)),
                ('bpm', models.CharField(blank=True, db_column='BPM', max_length=31, null=True)),
                ('key', models.CharField(blank=True, db_column='Key', max_length=15, null=True)),
                ('manufacturer', models.CharField(blank=True, db_column='Manufacturer', max_length=62, null=True)),
                ('designer', models.CharField(blank=True, db_column='Designer', max_length=62, null=True)),
                ('tracktitle', models.CharField(blank=True, db_column='TrackTitle', max_length=128, null=True)),
                ('cdtitle', models.CharField(blank=True, db_column='CDTitle', max_length=62, null=True)),
                ('cddescription', models.CharField(blank=True, db_column='CDDescription', max_length=128, null=True)),
                ('featuredinstrument', models.CharField(blank=True, db_column='FeaturedInstrument', max_length=128, null=True)),
                ('scene', models.CharField(blank=True, db_column='Scene', max_length=31, null=True)),
                ('take', models.CharField(blank=True, db_column='Take', max_length=31, null=True)),
                ('tape', models.CharField(blank=True, db_column='Tape', max_length=31, null=True)),
                ('mood', models.CharField(blank=True, db_column='Mood', max_length=1024, null=True)),
                ('version', models.CharField(blank=True, db_column='Version', max_length=31, null=True)),
                ('bwdescription', models.CharField(db_column='BWDescription', max_length=255)),
                ('bworiginator', models.CharField(db_column='BWOriginator', max_length=62)),
                ('bworiginatorref', models.CharField(db_column='BWOriginatorRef', max_length=62)),
                ('bwtimestamp', models.IntegerField(db_column='BWTimeStamp')),
                ('bwtime', models.CharField(db_column='BWTime', max_length=8)),
                ('bwdate', models.CharField(db_column='BWDate', max_length=10)),
            ],
            options={
                'db_table': 'metadata',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Playlists',
            fields=[
                ('recid', models.AutoField(db_column='RecID', primary_key=True, serialize=False)),
                ('playlistname', models.CharField(db_column='playlistName', max_length=62)),
            ],
            options={
                'db_table': 'playlists',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PostingAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posting_id', models.IntegerField(blank=True, null=True)),
                ('track_id', models.IntegerField(blank=True, null=True)),
                ('longid', models.CharField(blank=True, db_column='longID', max_length=16, null=True)),
                ('album', models.CharField(blank=True, max_length=255, null=True)),
                ('order_position', models.IntegerField(blank=True, null=True)),
                ('filename', models.TextField(blank=True, null=True)),
                ('filepath', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'posting_assets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PostingLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_logged', models.DateTimeField()),
                ('src', models.CharField(max_length=255)),
                ('posting_account', models.CharField(max_length=255)),
                ('share_id', models.IntegerField(blank=True, null=True)),
                ('posting_id', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=8, null=True)),
                ('asset', models.TextField()),
                ('ip', models.CharField(max_length=40)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'posting_logs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Postings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, max_length=6, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('artwork', models.IntegerField(blank=True, null=True)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('date_modified', models.DateTimeField(blank=True, null=True)),
                ('slug', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'postings',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PostingShares',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_shared', models.DateTimeField()),
                ('posting_id', models.IntegerField()),
                ('from_email', models.CharField(max_length=255)),
                ('from_name', models.CharField(blank=True, max_length=255, null=True)),
                ('to_email', models.CharField(max_length=255)),
                ('cc_email', models.CharField(blank=True, max_length=255, null=True)),
                ('clicked', models.CharField(blank=True, max_length=3, null=True)),
                ('played', models.CharField(blank=True, max_length=3, null=True)),
                ('forwarded', models.CharField(blank=True, max_length=3, null=True)),
                ('hash', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'posting_shares',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecessToolsClasses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('parentid', models.IntegerField(blank=True, db_column='parentId', null=True)),
                ('packageid', models.IntegerField(blank=True, db_column='packageId', null=True)),
                ('doccomment', models.TextField(blank=True, db_column='docComment', null=True)),
                ('file', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recess_tools_classes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecessToolsPackages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('parentid', models.IntegerField(blank=True, db_column='parentId', null=True)),
            ],
            options={
                'db_table': 'recess_tools_packages',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Schema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schema', models.CharField(max_length=30)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('version_min', models.IntegerField(blank=True, null=True)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'schema',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TtLicenses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('name', models.TextField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=128, null=True)),
                ('track', models.CharField(blank=True, max_length=128, null=True)),
                ('short_id', models.CharField(blank=True, max_length=40, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tt_licenses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Uuid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_umid', models.TextField(db_column='_UMID')),
            ],
            options={
                'db_table': 'uuid',
                'managed': True,
            },
        ),
    ]
